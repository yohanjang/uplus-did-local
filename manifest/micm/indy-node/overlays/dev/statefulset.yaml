apiVersion: apps/v1
kind: StatefulSet
metadata:
  # 'monachain-indy-node' 로 고정해야 함 : monachain-indy-node-0 ~ monachain-indy-node-3 까지 Pod 명 fix
  name: monachain-indy-node
  labels:
    app: indy-node
spec:
  serviceName: indy-node
  selector:
    matchLabels:
      app: indy-node
  # RollingUpdate 설정
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        app: indy-node
    spec:
      # indy-node, acapy-agency 전용 serviceAccount 지정
      serviceAccount: indy
      # securityContext '1001' 지정 필요 : 미지정시 Pod 실행 중 permission error 발생
      securityContext:
        # User 'indy' : uid=1001(indy) gid=1001(indy) groups=1001(indy)
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup : 1001
      # 'Pod Topology Spread Constraints'
      # Reference : https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway   # DoNotSchedule
        labelSelector:
          matchLabels:
            app: indy-node
      volumes:
        # genesis
        - name: indy-node-genesis-volume
          configMap:
            name: indy-node-genesis-configmap
            items:
              # key : ConfigMap 에 지정된 Key 명
              # path : Volume 에 저장되는 파일 이름
              - key: pool_transactions_genesis
                path: pool_transactions_genesis
              - key: domain_transactions_genesis
                path: domain_transactions_genesis
        # data
        - name: indy-node-data-volume
          persistentVolumeClaim:
            claimName: dmicma-data-volume-claim
        # logs
        - name: indy-node-logs-volume
          persistentVolumeClaim:
            claimName: dmicma-logs-volume-claim
        # Script
        - name: indy-node-script-volume
          configMap:
            name: indy-node-script
            # mount 시 'root:root' 로 지정됨 : 일반 계정으로 script 실행 가능하도록 0777 로 지정 
            defaultMode: 0777
      ### terminationGracePeriodSeconds : pod 종료시 timeout
      ### lifecycle.preStop 보다 우선순위 높음 : 30초 설정 ( default : 30초 )
      terminationGracePeriodSeconds: 30
      containers:
        - name: indy-node-container
          image: harbor-core.lguplus-registry.svc.cluster.local/micm-dev/uplus-indy-node
          imagePullPolicy: Always
          volumeMounts:
            # genesis
            - name: indy-node-genesis-volume
              mountPath: /etc/indy/monachain_did
            # data
            - name: indy-node-data-volume
              mountPath: /var/lib/indy/monachain_did/data
              subPathExpr: indy-node/$(POD_NAME)
            # logs
            - name: indy-node-logs-volume
              mountPath: /var/log/indy/monachain_did
              subPathExpr: indy-node
            ### Pod 내 '/script' 경로에 configmap 지정 script 들을 일괄 mount
            - name: indy-node-script-volume
              mountPath: /script
          ### startupProbe : 해당 Pod 내 컨테이너의 application 이 시작되었는지 확인
          ### startupProbe OK 전까지는 readinessProbe/livenessProbe 호출하지 않음
          startupProbe:
            tcpSocket:
              port: node-port
            initialDelaySeconds: 20   # pod 최초 생성 후 대기시간 ( Defaults: 0 )
            periodSeconds: 5          # probe 호출 주기 ( Defaults: 10 )
            timeoutSeconds: 3         # probe 호출시 timeout ( Defaults: 1 )
            failureThreshold: 5       # probe 가 실패할 수 있는 횟수 ( Defaults: 3 )
          ### readinessProbe : 해당 Pod 가 traffic 을 받을 준비가 되어있는지 확인
          ### 진단에 실패하면 엔드포인트(Endpoint) 컨트롤러는 해당 Pod 의 IP 를 endpoint 에서 제거
          readinessProbe:
            tcpSocket:
              port: node-port
            initialDelaySeconds: 20   # startupProbe.initialDelaySeconds 와 동일하게 적용
            periodSeconds: 30         # probe 호출 주기
            timeoutSeconds: 3         # probe 호출시 timeout
            failureThreshold: 5       # probe 가 실패할 수 있는 횟수 ( Defaults: 3 )
          ### livenessProbe : 해당 Pod 가 가동 중인지 (alive) 확인
          ### Probe 호출 실패 횟수가 failureThreshold 초과시 Pod Restart 
          livenessProbe:
            tcpSocket:
              port: node-port
            initialDelaySeconds: 20   # startupProbe.initialDelaySeconds 와 동일하게 적용
            periodSeconds: 30         # probe 호출 주기
            timeoutSeconds: 3         # probe 호출시 timeout
            failureThreshold: 5       # probe 가 실패할 수 있는 횟수 ( Defaults: 3 )

          env:
            # 배포 환경 구분자
            - name: overlays_profile
              value: dev

          envFrom:
            # config.yaml 내 indy-node-env-configmap
            - configMapRef:
                name: indy-node-env-configmap
            # config.yaml 내 indy-node-genesis-configmap
            - configMapRef:
                name: indy-node-genesis-configmap

          command:
          - /bin/bash
          - -c
          - |
            # \$(hostname) : 'monachain-indy-node-0' ~ 'monachain-indy-node-3' 중의 하나
            start_indy_node $(hostname) 0.0.0.0 9701 0.0.0.0 9702 \
            && /script/entrypoint.sh
          resources:
            limits:
              memory: "512Mi"
              cpu: "0.5"
            requests:
              memory: "512Mi"
              cpu: "0.5"
